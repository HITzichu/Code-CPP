
/*
  典型的DP问题，对每一个位置保存两个值，即按照升还是降的来到此节点的最长大小
*/

class Solution {
public:
    int wiggleMaxLength(vector<int>& nums) {
        
        if(nums.size()==0) return 0;
        vector<vector<int>>DP(nums.size(),vector<int>(2,0));
        DP[0][0] = 1;
        DP[0][1] = 1;
        
        for(int i=1;i < nums.size();i++)
        {
            if(nums[i] > nums[i-1])
            {
                DP[i][1] = DP[i-1][0] + 1;
                DP[i][0] = DP[i-1][0];
            }
            else if(nums[i] < nums[i-1])
            {
                DP[i][0] = DP[i-1][1] + 1;
                DP[i][1] = DP[i-1][1];
            }
            else
            {
                DP[i][0] = DP[i-1][0];
                DP[i][1] = DP[i-1][1];
            }
        }
        return max(DP.back()[0], DP.back()[1]);
        
    }
};
